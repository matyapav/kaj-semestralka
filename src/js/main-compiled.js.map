{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["/**\r\n * Created by Pavel on 01.04.2017.\r\n */\r\nimport Player from './drawables/player.js';\r\nimport Drawable from './drawables/drawable.js'\r\nimport InteractiveTile from './drawables/interactive_tile.js'\r\nimport Controls from './managers/controls.js'\r\nimport Item from './drawables/item.js'\r\nimport ItemManager from './managers/item_manager.js'\r\nimport LevelManager from './managers/level_manager.js'\r\nimport Dialog from './drawables/dialog.js'\r\nimport ResourceManager from './managers/resource_manager.js'\r\n\r\n//init canvas\r\nconst canvas = document.getElementById(\"myCanvas\");\r\nconst ctx = canvas.getContext('2d');\r\nctx.scale(2, 2);\r\n\r\n//init game stuff\r\nlet state = {\r\n    player: new Player(canvas.width / 2, canvas.height / 2, 18, 24, 2, ResourceManager.get(\"trainer\")),\r\n    dialogs: [],\r\n    backpackOpened: false\r\n};\r\nLevelManager.initLevels();\r\nlet level = LevelManager.actualLevel;\r\nlet walls = [], items = [], grass = [];\r\nlet controls = new Controls(state);\r\ncontrols.init();\r\ninitLevel();\r\n\r\n/////////////////////////////////////////\r\nfunction initLevel() {\r\n    for (let i = 0; i < level.length; i++) {\r\n        for (let j = 0; j < level[i].length; j++) {\r\n            switch (level[i][j]) {\r\n                case 0:\r\n                    grass.push(new Drawable(j * 32, i * 32, 32, 32, ResourceManager.get('grass')));\r\n                    break;\r\n                case 1:\r\n                    walls.push(new InteractiveTile(j * 32, i * 32, 32, 32, ResourceManager.get('wall')));\r\n                    break;\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                    grass.push(new Drawable(j * 32, i * 32, 32, 32, ResourceManager.get('grass')));\r\n                    items.push(new Item(j * 32, i * 32, 32, 32, ItemManager.getItem(level[i][j]), ResourceManager.get('pokeball')));\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//TODO vymyslet co s timto - presunout nepresunout?\r\nfunction checkCollisions() {\r\n    for (let i = 0; i < walls.length; i++) {\r\n        if (walls[i].checkCollisionWithPlayer(state.player)) {\r\n            state.player.dx = 0;\r\n            state.player.dy = 0;\r\n            state.player.playerAnimation.stopAnimation();\r\n        }\r\n    }\r\n    for (let i = 0; i < items.length; i++) {\r\n        if (items[i].checkCollisionWithPlayer(state.player)) {\r\n            if (state.player.isDoingPrimaryAction()) {\r\n                controls.switchToDialogControls();\r\n                let dialogX = state.player.posX - canvas.width / 8 + state.player.w / 2;\r\n                let dialogY = state.player.posY + canvas.height / 2 - 200;\r\n                let dialogHeight = 50;\r\n                let dialogWidth = canvas.width / 4;\r\n                state.dialogs.push(new Dialog(dialogX, dialogY, dialogWidth, dialogHeight, \"You've found \" + items[i].itemInfo.name));\r\n                state.dialogs.push(new Dialog(dialogX, dialogY, dialogWidth, dialogHeight,\r\n                    items[i].itemInfo.name + \" is \" + items[i].itemInfo.desc));\r\n                state.player.backpack.addToBackpack(items[i].itemInfo.name);\r\n                items.splice(i, 1); //remove from map\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//game updates////////\r\nfunction update() {\r\n    checkCollisions();\r\n    state.player.update();\r\n    draw();\r\n}\r\n//draw\r\nfunction draw() {\r\n    clearCanvas();\r\n    ctx.save();\r\n    ctx.translate(-state.player.posX + canvas.width / 2 / 2 - state.player.w, -state.player.posY + canvas.height / 2 / 2 - state.player.h);\r\n\r\n    for (let i = 0; i < walls.length; i++) {\r\n        walls[i].draw(ctx);\r\n    }\r\n    for (let i = 0; i < grass.length; i++) {\r\n        grass[i].draw(ctx);\r\n    }\r\n    for (let i = 0; i < items.length; i++) {\r\n        items[i].draw(ctx);\r\n    }\r\n\r\n    state.player.draw(ctx);\r\n    if (state.dialogs.length != 0) {\r\n        state.dialogs[0].draw(ctx);\r\n    }\r\n\r\n    if (state.backpackOpened) {\r\n        let bpX = state.player.posX + canvas.width / 8 + state.player.w / 2;\r\n        let bpY = state.player.posY - canvas.height/8 - 50;\r\n        let bpHeight = canvas.height/2 - 15;\r\n        let bpWidth = 160;\r\n        state.player.backpack.setPosition(bpX, bpY, bpWidth, bpHeight);\r\n        state.player.backpack.draw(ctx);\r\n    }\r\n    ctx.restore()\r\n}\r\n\r\nfunction clearCanvas() {\r\n    ctx.fillStyle = '#000000';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nsetInterval(update, 1000 / 60);\r\n\r\n///animation test\r\n"]}